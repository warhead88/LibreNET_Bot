from aiogram import Bot, Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery

import keyboards as kb
from database import Database

db = Database()

router = Router()

introduction = """–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –Ω–µ–±–æ–ª—å—à–æ–π VPN-—Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç —Ç–µ–±–µ —Å–≤–æ–±–æ–¥—É –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –í—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å—Ç—å –Ω–∏–∂–µ."""

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(introduction, reply_markup=kb.options_for_start)

@router.callback_query(F.data == 'homedir')
async def menu(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text(introduction, reply_markup=kb.options_for_start)

@router.callback_query(F.data == 'mainmenu')
async def main_menu(callback: CallbackQuery):
    await db.connect()
    await callback.answer('')
    if await db.check_sub(callback.from_user.id) == True:
        status = '–ê–∫—Ç–∏–≤–Ω–∞'
    else:
        status = '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'
    await callback.message.edit_text(f"""–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å—è—á–µ—Å–∫–∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º.
–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: {status} """, reply_markup=kb.menu_button)
    await db.disconnect()

@router.callback_query(F.data == 'prices')
async def prices(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text("""–ü–æ —Ü–µ–Ω–∞–º –≤—Å—ë –¥–µ–º–æ–∫—Ä–∞—Ç–∏—á–Ω–æ :)
–ú–µ—Å—è—Ü - 150 —Ä—É–±–ª–µ–π;
–ì–æ–¥ - 1500 —Ä—É–±–ª–µ–π.""", reply_markup=kb.options_for_prices)

@router.callback_query(F.data == 'buy_month')
async def buy_month(callback: CallbackQuery):
    await db.connect()
    id = callback.from_user.id
    username = callback.from_user.username
    first_name = callback.from_user.first_name
    sub_type = 'month'
    await db.add_user(id, username, first_name, sub_type)
    await callback.answer('')
    await db.disconnect()
    await callback.message.edit_text("–ü—Ä–∏–º–µ—Ä –ø–æ–∫—É–ø–∫–∏ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.", reply_markup=kb.menu_button)

@router.callback_query(F.data == 'buy_year')
async def buy_year(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text("–ü—Ä–∏–º–µ—Ä –ø–æ–∫—É–ø–∫–∏ –≥–æ–¥–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.", reply_markup=kb.menu_button)

@router.callback_query(F.data == 'information')
async def info(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text("–¢—É—Ç –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.", reply_markup=kb.information)

@router.callback_query(F.data == 'servers')
async def servers(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text("""–°–µ—Ä–≤–µ—Ä—ã:
    üá´üáÆ –§–∏–Ω–ª—è–Ω–¥–∏—è - x1;
    üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã - x1.
–ü–æ–∫–∞ —á—Ç–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å—ë. –î–∞–ª—å—à–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è.""", reply_markup=kb.menu_button)
